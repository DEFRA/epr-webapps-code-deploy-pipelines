trigger: none
pr: none
pool: DEFRA-COMMON-ubuntu2004-SSV3

parameters:
- name: updateSettings
  type: boolean
  displayName: 'Update app service configurations'
  default: false
- name: teamName
  displayName: 'Select team name:    (works only with "development" as target env)'
  default: 'Team-6_Stig'
  type: string
  values:
  - Team-1_Pi
  - Team-2_Wastebusters
  - Team-3_Recyclers
  - Team-4_QA
  - Team-5_Phoenix
  - Team-6_Stig
  - Team-7_Oscar
  - Team-8_Pre-TST
  - Team-9_Ops
- name: envToDeploy
  displayName: 'Target environment to deploy'
  default: development
  type: string
  values:
  - development
  - tst
  - preprod
  - prod
- name: releaseVersion
  displayName: 'Release version (e.g. Release-2.8.2). In development environments you probably want to use latest as this will deploy from main branch using the latest commit)'
  default: 'latest'
  type: string

resources:
  repositories:
   # The repo will be reference the repo by a release tag (if the releaseVersion parameter contains 'release') otherwise it will pull down the main branch.
  - repository: EprAppConfigSettings
    name: RWD-CPR-EPR4P-ADO/epr-app-config-settings
    type: git
    ref: ${{ replace(replace(contains(parameters.releaseVersion, 'RELEASE'),'True',replace('refs/tags/RELEASETAG','RELEASETAG', parameters.releaseVersion)),'False','main') }}
  - repository: FrontendAccountCreationMicroservice
    name: RWD-CPR-EPR4P-ADO/frontend-accountcreation-microservice
    type: git
    ref: main
  - repository: FrontendAccountManagementMicroservice
    name: RWD-CPR-EPR4P-ADO/frontend-accountmanagement-microservice
    type: git
    ref: main
  - repository: PomSubmissionCheckSplitter
    name: RWD-CPR-EPR4P-ADO/epr_pom_func_submission_check_splitter
    type: git
    ref: main
  - repository: EprPackagingFrontend
    name: RWD-CPR-EPR4P-ADO/epr_packaging_frontend
    type: git
    ref: main
  - repository: EprLoggingApi
    name: defra/epr-logging-api
    type: github
    ref: main
    endpoint: DEFRA
  - repository: EprRegulatorEnrolmentFrontend
    name: RWD-CPR-EPR4P-ADO/epr-regulator-enrolment-frontend
    type: git
    ref: main
  - repository: EprRegulatorService
    name: RWD-CPR-EPR4P-ADO/epr_regulator_service
    type: git
    ref: main
  - repository: EprRegulatorServiceFacade
    name: RWD-CPR-EPR4P-ADO/epr_regulator_service_facade
    type: git
    ref: main
  - repository: FacadeAccountMicroservice
    name: RWD-CPR-EPR4P-ADO/facade-account-microservice
    type: git
    ref: main
  - repository: FrontendObligationcheckerMicroservice
    name: RWD-CPR-EPR4P-ADO/epr-obligationchecker-frontend
    type: git
    ref: main
  - repository: EprAntiVirusFunctionApp
    name: defra/epr-anti-virus-function-app
    type: github
    ref: main
    endpoint: DEFRA
  - repository: EprEventDispatcherFunctionApp
    name: RWD-CPR-EPR4P-ADO/epr-event-dispatcher-function-app
    type: git
    ref: main
  - repository: EprPomApiSubmissionStatus
    name: RWD-CPR-EPR4P-ADO/epr_pom_api_submission_status
    type: git
    ref: main
  - repository: EprPomApiWeb
    name: RWD-CPR-EPR4P-ADO/epr_pom_api_web
    type: git
    ref: main
  - repository: EprPomFuncProducerValidation
    name: RWD-CPR-EPR4P-ADO/epr_pom_func_producer_validation
    type: git
    ref: main
  - repository: EprRegistrationValidationFunctionApp
    name: RWD-CPR-EPR4P-ADO/epr-registration-validation-function-app
    type: git
    ref: main
  - repository: BackendAccountMicroservice
    name: RWD-CPR-EPR4P-ADO/backend-account-microservice
    type: git
    ref: main
  - repository: CommonTemplates
    name: RWD-CPR-EPR4P-ADO/epr-webapps-code-deploy-templates
    type: git
    ref: main

variables:
  - ${{ if eq( parameters.envToDeploy, 'development') }}:
    - name: teamName
      value: ${{ parameters.teamName }}
  - ${{ else }}:
    - name: teamName
      value: ${{ parameters.envToDeploy }}
  - template: pipelines/templates/env-specific-config.yaml@EprAppConfigSettings
    parameters:
      teamName: ${{ variables.teamName }}

stages:
  - ${{ if eq( parameters.updateSettings, 'true') }}:
    - stage: UpdateSettings
      variables:
        - name: settingsDir
          value: $(Build.SourcesDirectory)/${{ lower(variables.environmentName) }}
      jobs:
        - job: UpdateSettings
          displayName: Update Settings
          pool: $(agentPool)
          steps:
            - checkout: EprAppConfigSettings
            - template: pipelines/templates/mass-configuration-template.yaml@EprAppConfigSettings
              parameters:
                subscriptionName: ${{ variables.subscriptionName }}
                webResourceGroupName: ${{ variables.webResourceGroupName }}
                restartApp: false
                ${{ if and( ne(parameters.teamName, 'tst'), ne(parameters.teamName, 'preprod'), ne(parameters.teamName, 'prod'), ne(parameters.teamName, 'Team-8_Pre-TST')) }}:
                  useDevConfig: true
                  configDirectory: $(Pipeline.Workspace)/s/dev/config
                ${{ else }}:
                  configDirectory: $(settingsDir)
                environmentSpoke: $(environmentSpoke)
                configTemplateInputDirectory: $(Pipeline.Workspace)/s/dev

  - template: templates/deploy-many.yaml
    parameters:
      teamName: ${{ parameters.teamName }}
      envToDeploy: ${{ parameters.envToDeploy }}
      webResourceGroupName: ${{ variables.webResourceGroupName }}
      updateSettings: ${{ parameters.updateSettings }}
