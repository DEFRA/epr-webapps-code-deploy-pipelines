
parameters:
- name: teamName
  type: string
- name: envToDeploy
  type: string
- name: webResourceGroupName
  type: string
- name: updateSettings
  type: boolean
- name: frontends
  type: object
  default:
  - repoName: FrontendAccountCreationMicroservice
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx402
  - repoName: FrontendAccountManagementMicroservice
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx405
  - repoName: FrontendAccountManagementMicroservice
    varPath: pipelines/vars-regulator/
    appService: DEVRWDWEBWAx412
  - repoName: EprPackagingFrontend
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx410
  - repoName: EprLoggingApi
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx403
  - repoName: EprRegulatorService
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx411
  - repoName: FrontendObligationcheckerMicroservice
    varPath: vars/
    appService: DEVRWDWEBWAx401
  - repoName: EprPaymentFrontend
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx423
  
- name: functions
  type: object
  default:
  - repoName: PomSubmissionCheckSplitter
    varPath: pipelines/vars/
    appService: DEVRWDWEBFAx403
  - repoName: EprAntiVirusFunctionApp
    varPath: pipelines/vars/
    appService: DEVRWDWEBFAx405
  - repoName: EprEventDispatcherFunctionApp
    varPath: pipelines/vars/
    appService: DEVRWDWEBFAx401
  - repoName: EprPomFuncProducerValidation
    varPath: pipelines/vars/
    appService: DEVRWDWEBFAx402
  - repoName: EprRegistrationValidationFunctionApp
    varPath: pipelines/vars/
    appService: DEVRWDWEBFAx404
  - repoName: EprDocumentSchemaJobRunnerFunctionApp
    varPath: pipelines/vars/
    appService: DEVRWDWEBFAx406
  - repoName: BackendAccountMicroservice
    varPath: pipelines/vars/
    appService: DEVRWDWEBFAx407
  - repoName: EprSubsidiaryFuncBulkUpload
    varPath: pipelines/vars/
    appService: DEVRWDWEBFAx408
  - repoName: EprPaymentMopup
    varPath: pipelines/vars/
    appService: DEVRWDWEBFAx409
  - repoName: eprprnintegrationfunction
    varPath: pipelines/vars/
    appService: DEVRWDWEBFAx412
- name: facades
  type: object
  default:
  - repoName: EprRegulatorServiceFacade
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx406
  - repoName: FacadeAccountMicroservice
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx404
  - repoName: FacadeAccountMicroservice
    varPath: pipelines/vars-regulator/
    appService: DEVRWDWEBWAx413
  - repoName: EprPomApiSubmissionStatus
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx408
  - repoName: EprCommonDataAPi
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx415
  - repoName: EprPomApiWeb
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx409
  - repoName: EprPaymentFacade
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx424
- name: backendService
  type: object
  default:
  - repoName: BackendAccountMicroservice
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx407
  - repoName: eprprncommonbackend
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx418
  - repoName: EprPaymentService
    varPath: pipelines/vars/
    appService: DEVRWDWEBWAx425

stages:
- ${{ each service in parameters.functions }}:
  - stage: Deploy_${{ service.repoName }}_to_${{ service.appService }}
    ${{ if eq( parameters.updateSettings, 'true') }}:
      dependsOn: UpdateSettings
    ${{ else }}:
      dependsOn: []
    variables:
    - template: /vars/mass-deployment/app-deployment.yaml
      parameters:
        envToDeploy: ${{ parameters.envToDeploy }}
        resource: ${{ service.repoName }}
        varPath: ${{service.varPath}}
        teamName: ${{ parameters.teamName }}
    - name: imageTag
      value: $[variables.${{ service.appService }}]
    - ${{ if or( eq(parameters.envToDeploy, 'development'), eq(parameters.envToDeploy, 'DEV4') )}}:
      - name: targetEnvironment
        value: development
    - ${{ else }}:
      - name: targetEnvironment
        value: ${{ variables.env }}
    jobs:
    - template: epr-funcs-deployment-pipeline.yaml@CommonTemplates
      parameters:
        imageTag: $(imageTag)
        azureSubscription: ${{ variables.azureSubscription }}
        acrName: $(acr.azureContainerRegistryName)
        ${{ if eq(service.repoName, 'BackendAccountMicroservice') }}:
          registryName: $(validationApiRepository)
          serviceName: $(validationApiServiceName)
        ${{ else }}:
          registryName: $(acr.repositoryName)
          serviceName: ${{ variables.serviceName }}
        targetEnvironment: ${{ variables.targetEnvironment }}
    - template: templates/restart-service.yaml@CommonTemplates
      parameters:
        subscriptionName: ${{ variables.azureSubscription }}
        webResourceGroupName: ${{ parameters.webResourceGroupName }}
        ${{ if eq(service.repoName, 'BackendAccountMicroservice') }}:
          serviceName: $(validationApiServiceName)'
        ${{ else }}:
          serviceName: ${{ variables.serviceName }}
        targetEnvironment: ${{ variables.targetEnvironment }}
        
- ${{ each service in parameters.backendService }}:
  - stage: Deploy_${{ service.repoName }}_to_${{ service.appService }}
    ${{ if eq( parameters.updateSettings, 'true') }}:
      dependsOn: UpdateSettings
    ${{ else }}:
      dependsOn: []
    condition: always()

    variables:
    - template: /vars/mass-deployment/app-deployment.yaml
      parameters:
        envToDeploy: ${{ parameters.envToDeploy }}
        resource: ${{ service.repoName }}
        varPath: ${{service.varPath}}
        teamName: ${{ parameters.teamName }}
    - name: imageTag
      value: $[variables.${{ service.appService }}]
    - ${{ if or( eq(parameters.envToDeploy, 'development'), eq(parameters.envToDeploy, 'DEV4') )}}:
      - name: targetEnvironment
        value: development
    - ${{ else }}:
      - name: targetEnvironment
        value: ${{ variables.env }}
    jobs:
    - template: epr-deployment-pipeline.yaml@CommonTemplates
      parameters:
        imageTag: $(imageTag)
        azureSubscription: ${{ variables.azureSubscription }}
        acrName: $(acr.azureContainerRegistryName)
        registryName: $(acr.repositoryName)
        serviceName: ${{ variables.serviceName }}
        targetEnvironment: ${{ variables.targetEnvironment }}
    - template: templates/restart-service.yaml@CommonTemplates
      parameters:
        subscriptionName: ${{ variables.azureSubscription }}
        webResourceGroupName: ${{ parameters.webResourceGroupName }}
        serviceName: ${{ variables.serviceName }}
        targetEnvironment: ${{ variables.targetEnvironment }}

- ${{ each service in parameters.facades }}:
  - stage: Deploy_${{ service.repoName }}_to_${{ service.appService }}
    ${{ if eq( parameters.updateSettings, 'true') }}:
      dependsOn: UpdateSettings
    ${{ else }}:
      dependsOn: []
    condition: always()

    variables:
    - template: /vars/mass-deployment/app-deployment.yaml
      parameters:
        envToDeploy: ${{ parameters.envToDeploy }}
        resource: ${{ service.repoName }}
        varPath: ${{service.varPath}}
        teamName: ${{ parameters.teamName }}
    - name: imageTag
      value: $[variables.${{ service.appService }}]
    - ${{ if or( eq(parameters.envToDeploy, 'development'), eq(parameters.envToDeploy, 'DEV4') )}}:
      - name: targetEnvironment
        value: development
    - ${{ else }}:
      - name: targetEnvironment
        value: ${{ variables.env }}
    jobs:
    - template: epr-deployment-pipeline.yaml@CommonTemplates
      parameters:
        imageTag: $(imageTag)
        azureSubscription: ${{ variables.azureSubscription }}
        acrName: $(acr.azureContainerRegistryName)
        registryName: $(acr.repositoryName)
        serviceName: ${{ variables.serviceName }}
        targetEnvironment: ${{ variables.targetEnvironment }}
    - template: templates/restart-service.yaml@CommonTemplates
      parameters:
        subscriptionName: ${{ variables.azureSubscription }}
        webResourceGroupName: ${{ parameters.webResourceGroupName }}
        serviceName: ${{ variables.serviceName }}
        targetEnvironment: ${{ variables.targetEnvironment }}

- ${{ each service in parameters.frontends }}:
  - stage: Deploy_${{ service.repoName }}_to_${{ service.appService }}
    ${{ if eq( parameters.updateSettings, 'true') }}:
      dependsOn: UpdateSettings
    ${{ else }}:
      dependsOn: []
    condition: always()

    variables:
    - template: /vars/mass-deployment/app-deployment.yaml
      parameters:
        envToDeploy: ${{ parameters.envToDeploy }}
        resource: ${{ service.repoName }}
        varPath: ${{service.varPath}}
        teamName: ${{ parameters.teamName }}
    - name: imageTag
      value: $[variables.${{ service.appService }}]
    - ${{ if or( eq(parameters.envToDeploy, 'development'), eq(parameters.envToDeploy, 'DEV4') )}}:
      - name: targetEnvironment
        value: development
    - ${{ else }}:
      - name: targetEnvironment
        value: ${{ variables.env }}
    jobs:
    - template: epr-deployment-pipeline.yaml@CommonTemplates
      parameters:
        imageTag: $(imageTag)
        azureSubscription: ${{ variables.azureSubscription }}
        acrName: $(acr.azureContainerRegistryName)
        registryName: $(acr.repositoryName)
        serviceName: ${{ variables.serviceName }}
        targetEnvironment: ${{ variables.targetEnvironment }}
    - template: templates/restart-service.yaml@CommonTemplates
      parameters:
        subscriptionName: ${{ variables.azureSubscription }}
        webResourceGroupName: ${{ parameters.webResourceGroupName }}
        serviceName: ${{ variables.serviceName }}
        targetEnvironment: ${{ variables.targetEnvironment }}

